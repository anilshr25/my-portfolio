name: Deploy with mTLS healthcheck

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode mTLS certificates
        run: |
          printf "%s" "${{ secrets.CERT_PEM_B64 }}" | base64 -d > /tmp/client.crt
          printf "%s" "${{ secrets.KEY_PEM_B64 }}" | base64 -d > /tmp/client.key
          printf "%s" "${{ secrets.CA_PEM_B64 }}" | base64 -d > /tmp/ca.pem
          
      - name: Health check with mTLS (allow failure)
        env:
          SERVER_IP: ${{ secrets.DEPLOY_SERVER_TWO }}
          PROTOCOL: https
        run: |
          echo "‚è≥ Checking $PROTOCOL://$SERVER_IP/healthcheck with mTLS..."
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            --cert client.crt --key client.key --cacert ca.pem \
            --connect-timeout 2 --max-time 3 \
            "$PROTOCOL://$SERVER_IP/healthcheck" || echo "Server is offline")
          if [ "$STATUS" = "200" ]; then
            echo "‚úÖ Server is healthy (HTTP 200)"
          else
            echo "‚ö†Ô∏è Server responded with HTTP $STATUS. Proceeding anyway..."
          fi
      - name: Deploy to Server 2 (only if online)
        run: |
          echo "üîç Checking if $SERVER_2 is online..."
          if nc -z -w3 $SERVER_IP 22; then
            echo "‚úÖ $SERVER_IP is reachable. Deploying..."
            ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER_2 bash -s << 'EOF'
              set -e
              echo "Deploying to $WORK_DIR"
              cd "$WORK_DIR"
              echo "Saving current commit..."
              git rev-parse HEAD > .prev-deploy || true
              echo "Pulling latest code..."
              git reset --hard
              git pull origin main
            EOF
          else
            echo "‚ùå $SERVER_2 is offline. Skipping deployment."
          fi



